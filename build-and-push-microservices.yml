# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3fb5e577-f47e-4ad8-ae58-ab6cebb62002'
  imageRepositorybenefits: 'benefits'
  imageRepositoryhealthcare: 'healthcare'
  imageRepositoryhospital: 'hospital'
  imageRepositoryinsurancev1: 'insurancev1'
  imageRepositoryinsurancev2: 'insurancev2'
  containerRegistry: 'dockerstore.azurecr.io'
  dockerbenefitsfilePath: '$(Build.SourcesDirectory)/Leon/Benefits/Dockerfile'
  dockerhealthcarefilePath: '$(Build.SourcesDirectory)/Leon/Healthcare/Dockerfile'
  dockerhospitalfilePath: '$(Build.SourcesDirectory)/Leon/Hospital/Dockerfile'
  dockerinsurancev1filePath: '$(Build.SourcesDirectory)/Leon/Insurance/Insurancev1/Dockerfile'
  dockerinsurancev2filePath: '$(Build.SourcesDirectory)/Leon/Insurance/Insurancev2/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAllMicroservices
  displayName: Build and push stage
  jobs:  
  - job: BuildAndPushBenefits
    displayName: Build and push Benefits Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a Benefits microservice image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositorybenefits)
        dockerfile: $(dockerbenefitsfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
  - job: BuildAndpushHealthcare
    displayName: Build and push Healthcare Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a new Healthcare image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryhealthcare)
        dockerfile: $(dockerhealthcarefilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)    
  - job: BuildAndpushHospital
    displayName: Build and push Hospital Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a new Hospital image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryhospital)
        dockerfile: $(dockerhospitalfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
  - job: BuildAndpushInsurancev1
    displayName: Build and push Insurance v1 Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a new Insurance v1 image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryinsurancev1)
        dockerfile: $(dockerinsurancev1filePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
  - job: BuildAndpushInsurancev2
    displayName: Build and push Insurance v2 Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push a new Insurance v2 image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositoryinsurancev2)
        dockerfile: $(dockerinsurancev2filePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
  - job: PreReleasePrepForBenefitsMicroservice
    displayName: Pre Release Preparation For Benefits Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo 'Hello world'           
          cat '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits.yaml'

          echo 'Hello world 0'  
          value=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits.yaml'`

          echo 'Hello world 0.25'  
          value=${value//##BUILD_ID##/$(Build.BuildId)}
          
          echo "$value" > '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits_build.yaml'
          echo 'Hello world 1'  
          value1=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits_build.yaml'`
          echo 'Hello world 2'  
          echo "$value1"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'build_BPM_artifact'
        publishLocation: 'pipeline'
  
  - job: PreReleasePrepForHealthcareMicroservice
    displayName: Pre Release Preparation For Healthcare Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo 'Hello world'           
          cat '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare.yaml'

          echo 'Hello world 0'  
          value=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare.yaml'`

          echo 'Hello world 0.25'  
          value=${value//##BUILD_ID##/$(Build.BuildId)}
          
          echo "$value" > '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare_build.yaml'
          echo 'Hello world 1'  
          value1=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare_build.yaml'`
          echo 'Hello world 2'  
          echo "$value1"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'build_BPM_artifact'
        publishLocation: 'pipeline'

  - job: PreReleasePrepForHealthcareMicroservice
    displayName: Pre Release Preparation For Healthcare Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo 'Hello world'           
          cat '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare.yaml'

          echo 'Hello world 0'  
          value=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare.yaml'`

          echo 'Hello world 0.25'  
          value=${value//##BUILD_ID##/$(Build.BuildId)}
          
          echo "$value" > '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare_build.yaml'
          echo 'Hello world 1'  
          value1=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/healthcare_build.yaml'`
          echo 'Hello world 2'  
          echo "$value1"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'build_BPM_artifact'
        publishLocation: 'pipeline'

  - job: PreReleasePrepForHospitalMicroservice
    displayName: Pre Release Preparation For Hospital Microservice
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          echo 'Hello world'           
          cat '$(Build.SourcesDirectory)/KubeYaml/yaml/hospital.yaml'

          echo 'Hello world 0'  
          value=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/hospital.yaml'`

          echo 'Hello world 0.25'  
          value=${value//##BUILD_ID##/$(Build.BuildId)}
          
          echo "$value" > '$(Build.SourcesDirectory)/KubeYaml/yaml/hospital_build.yaml'
          echo 'Hello world 1'  
          value1=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/hospital_build.yaml'`
          echo 'Hello world 2'  
          echo "$value1"
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'build_BPM_artifact'
        publishLocation: 'pipeline'