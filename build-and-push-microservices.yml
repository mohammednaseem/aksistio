# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '3fb5e577-f47e-4ad8-ae58-ab6cebb62002'
  imageRepositorybenefits: 'benefits'
  imageRepositoryhealthcare: 'healthcare'
  containerRegistry: 'dockerstore.azurecr.io'
  dockerbenefitsfilePath: '$(Build.SourcesDirectory)/Leon/Benefits/Dockerfile'
  dockerhealthcarefilePath: '$(Build.SourcesDirectory)/Leon/Healthcare/Dockerfile'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAllMicroservices
  displayName: Build and push stage
  jobs:  
  - job: BuildAndPushBenefits
    displayName: Build and push Benefits Microservice
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositorybenefits)
        dockerfile: $(dockerbenefitsfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
  - job: BuildAndpushHealthcare
    displayName: Build and push Healthcare Microservice
    pool:
      vmImage: $(vmImageName)
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
        command: buildAndPush
        repository: $(imageRepositoryhealthcare)
        dockerfile: $(dockerhealthcarefilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
      - job: PreReleasePrep
        displayName: Pre Release Preparation
        pool:
          vmImage: $(vmImageName)
        steps:

      - task: Bash@3
        inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
              
          echo 'Hello world'              
          cat '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits.yaml'
          echo 'Hello world 0'  
          value=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits.yaml'`

          echo 'Hello world 0.25'  
          value=${value//##BUILD_ID##/$(Build.BuildId)}
              
          echo "$value" > '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits_build.yaml'
          echo 'Hello world 1'  
          value1=`cat '$(Build.SourcesDirectory)/KubeYaml/yaml/benefits_build.yaml'`
          echo 'Hello world 2'  
          echo "$value1"
      - task: PublishPipelineArtifact@1
        inputs:
        targetPath: '$(Pipeline.Workspace)'
        artifact: 'build_BPM_artifact'
        publishLocation: 'pipeline'
